{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red46\green45\blue42;\red255\green255\blue255;\red162\green70\blue22;
}
{\*\expandedcolortbl;;\cssrgb\c23529\c23137\c21569;\cssrgb\c100000\c100000\c100000;\cssrgb\c70196\c35294\c10588;
}
{\info
{\author Elisabeth Robson}}\margl1440\margr1440\vieww19520\viewh25200\viewkind0
\deftab720
\pard\pardeftab720\sl920\partightenfactor0

\f0\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A little design\
\pard\pardeftab720\sa400\partightenfactor0

\fs36 \cf2 Take a look at the video of the finished music box in the previous lesson, and take careful note of the behavior of the circles.\cb1 \
\cb3 Each circle appears with a sound, grows to a certain size, and then disappears and the whole cycle repeats. This happens for every circle that we want to add to the canvas.\cb1 \
\cb3 To make our circles so they behave like this, we need to repeatedly draw each circle. Each time we draw a circle we'll draw it slightly bigger than the time before. When a circle reaches a certain maximum size, it disappears, and then starts growing again from zero.\cb1 \
\cb3 You can think of this behavior as being almost like a movie: we have a series of "frames" that create an animation as we play them. If we play them fast enough then the animation will look smooth, just like if we play the individual frames of a movie fast enough.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {{\NeXTGraphic Pasted Graphic.jpg \width8000 \height940 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\

\f0\fs36 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 We'll break this into two steps. In the first step, we're going to get all the circles drawn on the canvas, and make sure we can add new circles whenever you click, so you see those circles too.\cb1 \
\cb3 To do that, we need to iterate through the\'a0
\f2 \cf4 \strokec4 clicks
\f0 \cf2 \strokec2 \'a0array and draw all the circles in that array on the canvas. We'll do that in the\'a0
\f2 \cf4 \strokec4 updateDisplay
\f0 \cf2 \strokec2 \'a0function.\cb1 \
\cb3 We're also going to change how we call\'a0
\f2 \cf4 \strokec4 updateDisplay
\f0 \cf2 \strokec2 . Right now, we're calling it just once, from the\'a0
\f2 \cf4 \strokec4 window.onload
\f0 \cf2 \strokec2 \'a0function. But if we call it only once, you won't see the circles change size (which we'll do in a later lesson), and you won't see any new circles added to the canvas over time, as you click. So what we really need to do is call\'a0
\f2 \cf4 \strokec4 updateDisplay
\f0 \cf2 \strokec2 \'a0over and over again---this is the movie frame part of the code.\cb1 \
\cb3 Each time we call\'a0
\f2 \cf4 \strokec4 updateDisplay
\f0 \cf2 \strokec2 , we'll reset the canvas, and then redraw all the circles in the\'a0
\f2 \cf4 \strokec4 clicks
\f0 \cf2 \strokec2 \'a0array. That way, if you load the page, and then a few seconds later, click to add a circle, you'll see that circle appear in the canvas the next time\'a0
\f2 \cf4 \strokec4 updateDisplay
\f0 \cf2 \strokec2 \'a0is called.\cb1 \
\cb3 Let's dive into the code so you can see how this is going to work.\cb1 \
}