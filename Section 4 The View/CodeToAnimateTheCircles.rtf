{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red46\green45\blue42;\red255\green255\blue255;\red13\green100\blue126;
\red162\green70\blue22;\red245\green246\blue249;}
{\*\expandedcolortbl;;\cssrgb\c23529\c23137\c21569;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c46667\c56863;
\cssrgb\c70196\c35294\c10588;\cssrgb\c96863\c97255\c98039;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\info
{\author Elisabeth Robson}}\margl1440\margr1440\vieww19520\viewh25200\viewkind0
\deftab720
\pard\pardeftab720\sl920\partightenfactor0

\f0\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Code to animate the circles\
\pard\pardeftab720\sa400\partightenfactor0

\fs36 \cf2 Here's the code we just added to the View in the previous lesson to take a step towards animating the circles. Go ahead and get it typed in, and then make sure you understand what we're doing at each step.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://gist.github.com/bethrobson/82adaa24d0039c345e27"}}{\fldrslt \cf4 \cb3 \strokec4 Get the updates to the View from GitHub}}\cb3 .\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 We're using the objects in the\'a0
\f1 \cf5 \strokec5 clicks
\f0 \cf2 \strokec2 \'a0array to keep track of the changing radius of each circle. Remember, each item in the\'a0
\f1 \cf5 \strokec5 clicks
\f0 \cf2 \strokec2 \'a0array represents the x, y coordinate of a circle we're drawing on the canvas, and now we're using the\'a0
\f1 \cf5 \strokec5 radius
\f0 \cf2 \strokec2 \'a0property to store the circle's current radius.\cb1 \
\cb3 We want each circle to grow to a maximum radius and then stop growing. We set the maximum radius in the View property\'a0
\f1 \cf5 \strokec5 maxRadius
\f0 \cf2 \strokec2 . Each time we call\'a0
\f1 \cf5 \strokec5 updateDisplay
\f0 \cf2 \strokec2 , we check to see if the circle's radius is greater than this maximum radius and if it is, we don't call\'a0
\f1 \cf5 \strokec5 drawCircle
\f0 \cf2 \strokec2 . If it's still less than the maximum radius, we increase the radius size by 1.\cb1 \
\cb3 We also check the size of the radius to set the opacity using the alpha value in the rgba color. Recall that the alpha determines how opaque or transparent a color is. Until the circle reaches the maximum radius minus 15, we set the alpha value to .7, which means it's 70% opaque. After that point, until the circle is its maximum size, we set the alpha based on the size. Try out different techniques here to vary the opacity of the circles and see what you like!\cb1 \
\cb3 Once we've set the circle's radius and its opacity, we then call\'a0
\f1 \cf5 \strokec5 drawCircle
\f0 \cf2 \strokec2 , passing in the context, the x and y coordinates, the radius and the opacity.\cb1 \
\cb3 Let's give this a try! Time to test the code.\cb1 \
\pard\pardeftab720\partightenfactor0

\fs48 \cf2 \cb3 Resources for this lecture\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs40 \cf4 \cb6 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "javascript:void(0)"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Get the code from GitHub}}\cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}