{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue-Bold;
}
{\colortbl;\red255\green255\blue255;\red46\green45\blue42;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c23529\c23137\c21569;\cssrgb\c100000\c100000\c100000;}
{\info
{\author Elisabeth Robson}}\margl1440\margr1440\vieww19520\viewh25200\viewkind0
\deftab720
\pard\pardeftab720\sl920\partightenfactor0

\f0\fs72 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Audience Question\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {{\NeXTGraphic Pasted Graphic.jpg \width720 \height720 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f2\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 How do I know the best way to organize my code? Should I always use multiple techniques like we're using here (file organization, MVC structure, and using objects to modularize)?
\f0\b0 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \cb3 There are an infinite number of different ways you can choose to organize your code in any project. Well, maybe not infinite, but a lot. And sometimes you may not know the best way to organize it until after you start writing it and see what you're going to need for the project.\cb1 \
\cb3 In this project, we're illustrating three ways to keep code organized and well structured. First, we're separating the code into multiple files, to keep related things together in one file. But we could just as easily put all the code in one file. Another technique we're using is to put related properties and methods in one object. This can work to keep things modular---that is, each major piece of the implementation is one "module" of related code---whether you have all your code in one file, or split across multiple files as we're doing. Finally, we're using MVC---Model, View, Controller---as a way to conceptually think about organizing the code. This structure isn't precise, but it does help you think about how the various pieces of the implementation fit together and what each role is in the application.\cb1 \
}